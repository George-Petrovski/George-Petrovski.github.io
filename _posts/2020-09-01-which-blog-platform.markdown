---
title: Which Blog platform?
subtitle: Pros & Cons of each platforms
layout: post_detail
date-created: 2020-09-01
date-edited:
img: dreams.png
thumbnail: 2020-09-01-which-of-each-blog-platform-thumbnail.jpg
alt: image-alt
category: Post
description: Pros & Cons of each Blog platforms
comments: true
---

나는 게으른 사람이다. 그래도 가끔은 기록을 하려 블로그를 운영했었다.

2013년까지는 티스토리를 썼었고

군생활 할때에는 시덥잖은 내용으로 네이버 블로그를 채우다

전역이후에는 워드프레스를 설치해서 운영해왔다.

최근에는 내가 겪고 있는 문제를 해결하기 위해 관련된 키워드로 검색하다가 Github pages를 이용해

Today I learned (TIL)이라는 주제로 운영되는 기술 블로그를 알게되었다.

매일 매일 배우는것을 마크다운 언어로 포스팅하다니.. 부지런함에 경외로움을 느꼈다.

그간 게으르다 못해 포스팅 주기가 개월단위로 넘어가는 나에게 경종이 울린듯 신선한 충격이었다.

그래서 나도 Github Pages로 오늘 배운것을 기록하려고 이것저것 해보다

결국 근본은 Github Pages가 아닌 '오늘 배운것은 나의 자산이며 이것을 잃지 않기위해 기록'하는것 이었기에,

블로그 플랫폼들을 다시 비교해보고 고민해보게 되었다.

다음은 내가 개발자 블로그로써, 각 블로그마다의 장점과 단점을 비교한 부분들이다.

---

### Github Pages

#### Pros

* 여러가지 Jekyll 테마를 지원해서 디자인 선택의 폭이 넓음
* Github 에 Commit함으로써 포스팅을 하게되므로 개발이 아니더라도 포스팅시 Github profiles에 커밋내역이 남음
* 개발자로써 다른 서비스를 사용하지 않고 Github Page로 블로그를 운영한다는 약간의 자부심(?)
* 커스텀 도메인 사용가능

#### Cons

* Disqus 등을 통해 댓글기능을 추가할 수 있지만 누가 댓글을 달면 따로 push메세지 등을 통해 알려주지 않음
* Markdown언어를 통해서만 포스팅이 가능함. 글자에 색깔넣고 강조하고 이쁘게 만들고 싶은 블로거라면 가장 큰 단점이 될 수 있음
* 가끔 Github pages 가 점검을 하게되는데 이때 정상적인 접근이 안됨.   
-> 점검시 Github Pages기능으로 호스팅되는 오픈소스 Documetation 페이지들도 접속안됨..
* 작성을 하기위해선 물리적인 키보드가 있어야 편리함 (모바일에서 일일이 마크다운으로 언제 입력하나..?)
* 임시저장을 하기위해선 PC환경에서만 가능. (Git 커밋작업이 꼭 필요함)

물론 세팅을 하면 되는부분도 있고 안되는 부분도 있지만 글을 한번 쓰기위해서 손이 매우 많이가는 부분은 어쩔수 없음.

---

### WordPress (직접 호스팅)

#### Pros
* 워드프레스의 여러 플러그인과 아름다운 테마를 사용할 수 있다. 선택의 폭이 넓음
* CSS 수정과 여러 기능적인 부분들에 대한 커스터마이징이 가능
* 비교적 쉬운 SEO (검색엔진 최적화) 세팅
* 입맛에 맞게 세팅이 가능함
* 데이터 백업과 복원이 자유롭고 비교적 간편
* 임시저장 가능
* 하나의 글을 쓸 때 복수의 카테고리 설정가능
* 커스텀 도메인 사용가능

#### Cons
* 플러그인을 여러개 쓰면 엄청 느려짐 (페이지 로드하는데 오랜 시간이 걸림)
* 따라서 고성능의 서버가 필요하게 될 수 있음 (비용의 증가)
* **직접 세팅한 서버위에 올릴경우, 서버 장애시  복구작업을 직접 해야함. 덤으로 복구작업동안 접속이 안됨**

워드프레스에서 티스토리로 옮기게 된 결정적 이유. Google 크롤러는 주기적으로 내 블로그를 탐색하는데, 이때 접근이 되지 않으면 검색에서 노출될 확률이 적어진다. 지금까지 운영했던 워드프레스도 장애가 몇번 났는데, 이 문제로 내 블로그는 더이상 구글 검색에서 노출되지 않게되었다.

---

### Tistory

#### Pros

* 직접 서버를 운영하지 않으므로 서버운영에 대해 신경꺼도 상관없음
장애율이 적음
* 티스토리에서 지원하는 에디터를 사용하면 글 꾸미기가 지원됨 (가장 익숙함)
* 최근에는 마크다운 에디터를 제공해주기 까지 함 (익숙한 사람들에게는 최고)
* 임시저장 가능
* 워드프레스 만큼은 아니지만 입맛대로 수정할 수 있음
* CSS 수정으로 UI 커스터마이징이 가능
* 커스텀 도메인 사용가능

#### Cons
* 데이터 백업과 복원에 대해 자유롭지 않음(예전에는 xml내보내기가 가능했는데..)
* **결국 내 데이터가 아님.**
	+ 작성한 게시글과 블로그를 내것이라 생각할 수 있지만, 만약 티스토리가 갑자기 서비스 종료공지를 올린다면? 데이터는 영원히 보존되지 않을것이다.
* ~~아직도 2010년 초기에 머물러 있는 에디터~~ (티스토리 팀에서 에디터를 개선하기 위해 부단한 노력을 하고있음!)
* 비교적 폐쇄적임

---

번외

### Naver Blog

#### Pros

* 대부분의 티스토리의 장점과 유사
* 에디터에 코드를 추가할 수 있게 되어 본문 내 가독성 높은 코드 첨부가 가능하다
* 댓글/방명록 등 포스팅한 게시글의 피드백에 대해 push 알림 연동이 잘되어있음
* '이웃' 시스템으로 네이버 블로그에 포스팅하는 개발자간 정보공유&친목 가능

#### Cons

* 하지만 단점 또한 티스토리의 단점과 유사하고
Code Highlighting 이 되지 않아 샘플 코드를 첨부할때 되게 못나짐
* colorscripter.com 사용시 어느정도 해결은 가능
* **네이버 플랫폼에 종속됨 (중요)**
* 폐쇄적임

이외에 Medium, steemit, brunch 등의 블로그는 개발자 친화적이지 않아 비교대상에서 제외했습니다.
참고바랍니다.

---

결국 글 쓸때 제일 편하고, 장애율이 낮고, SEO가 그럭저럭 되는 티스토리가 제일 최적이라고 느꼈다.
사실 본인에게 제일 익숙한것이 티스토리이기도 했고...
제일 중요한건 어떤 블로그 플랫폼이냐가 아니라 어떤 글을 쓰냐가 중요하기에 티스토리로 정착하게 되었다.

이제 오늘부터, 가능한 한 1일 1포스팅으로 배운것들을 기록하려 노력하겠다.

---

### Source
[https://luiseok.com/2](https://luiseok.com/2)